pipeline:
  00-cache:
    group: 00-setup
    image: redwebaps/redform-cache:dev
    pull: true
    commands:
    # redFORM Composer cache
    - mv /opt/cache/redFORM/vendor tests
    - touch tests/.cache.composer.tmp

    # redFORM npm cache
    - mv /opt/cache/redFORM/build/node_modules .
    - touch tests/.cache.npm.tmp

    # Joomla CMS
    - mv /opt/cache/joomla-cms tests
    - touch tests/.cache.joomla-cms.tmp

  00-setup:
    group: 00-setup
    image: redwebaps/testbox-chromedriver:2.38
    # pull: true
    environment:
    - tests_user=admin
    - tests_suite=00-setup
    - tests_db=setup
    - build_path=/drone/src/github.com/${DRONE_REPO}
    - output_append=-00-a-setup
    commands:
    # Regular entry point
    - /entrypoint.sh &
    # Composer setup
    # - while [ ! -f tests/.cache.composer.tmp ]; do sleep 1; done          # Comment if not using composer cache
    - composer config -g github-oauth.github.com 6f8f19c330a0f899458e4b0670824deb8cdfe391
    #- composer install --prefer-dist                                    # Uncomment if not using composer cache
    # NPM setup
    - while [ ! -f tests/.cache.npm.tmp ]; do sleep 1; done               # Comment if not using npm cache
    #- npm install                                                       # Uncomment if not using npm cache
    # redFORM installer release
    # - while [ ! -f tests/.cache.composer.library.tmp ]; do sleep 1; done  # Comment if not using composer cache for libraries
    - mv build/gulp-config.json.dist build/gulp-config.json
    - cd build
    - npm install joomla-gulp --save-dev
    - gulp release --skip-version
    - cd ..
    # Codeception setup
    - cp tests/acceptance.suite.yml.dist.drone tests/acceptance.suite.yml
    # Test setup
    # - while [ ! -f tests/.cache.joomla-cms.tmp ]; do sleep 1; done        # Comment if not using Joomla CMS cache
    # - vendor/bin/robo tests:site-preparation 1 1
    # Ownership for uid 82
    - chown -R www-data:www-data .
    # Creating first clone for tests setup
    - mkdir -p tests/$tests_suite/joomla-cms
    - pwd
    # - rsync -a tests/joomla-cms/ tests/$tests_suite/joomla-cms
    # Creates the database (required because of the Codeception Db module)
    - mysql -u root -proot -h db -e "CREATE DATABASE $tests_db"
    # Execution under uid 82 (www / www-data)
    # - while [ ! -f tests/.cache.aesir-core.tmp ]; do sleep 1; done        # Comment if not using redFORM Core cache
    - cd tests
    - su www-data -c 'vendor/bin/robo tests:setup 1 1'

  00-setup-stages:
    group: tests
    image: redwebaps/testbox-chromedriver:2.38
    environment:
    - tests_user=admin
    - tests_suite=00-setup
    - tests_db=setup
    - build_path=/drone/src/github.com/${DRONE_REPO}
    - output_append=-00-b-setup-stages
    commands:
    # Final DB dump with full Joomla/extension setup
    - rsync -a --delete tests/$tests_suite/joomla-cms/ tests/joomla-cms
    - sed -i "s/db = '$tests_db'/db = 'tests_db'/g" tests/joomla-cms/configuration.php
    - sed -i "s,$tests_suite/joomla-cms/,joomla-cms/,g" tests/joomla-cms/configuration.php
    - mysqldump -u root -proot -h db $tests_db > tests/dbdump.sql.tmp


    # Stages setup
    - sh tests/drone/setup-stages.sh "administrator"    "01-administrator"
  01-administrator:
    group: tests
    image: redwebaps/testbox-chromedriver:2.38
    environment:
    - tests_user=admin
    - tests_suite=01-visit-patterns
    - tests_db=visitpatterns
    - build_path=/drone/src/github.com/${DRONE_REPO}
    - output_append=-01-administrator
    commands:
    # Regular entry point
    - /entrypoint.sh &
    # Performs test after ensuring that the scenario has been fully set up
    - while [ ! -f tests/.cache.setup.$tests_suite.tmp ]; do sleep 1; done
    # Performs test
    - su www-data -c 'vendor/bin/robo tests:run acceptance/administrator/03-CheckForWarningsAndNoticesCept.php 1 1'
    - su www-data -c 'vendor/bin/robo tests:run acceptance/administrator/AddAFieldCest.php 1 1'
    - su www-data -c 'vendor/bin/robo tests:run acceptance/administrator/AddAFormCest.php 1 1'
    - su www-data -c 'vendor/bin/robo tests:run acceptance/administrator/AddASectionCest.php 1 1'
  slack:
    image: plugins/slack
    webhook: https://hooks.slack.com/services/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
    channel: redform
    when:
      status: [ success, failure ]
    template: >
      {{#success build.status}}
        {{repo.name}} PR #{{build.pull}} succeeded in {{since build.started}}. Good job {{build.author}}!  Here is the build log: {{build.link}}.  Link to the PR: https://github.com/{{repo.owner}}/{{repo.name}}/pull/{{build.pull}}
      {{else}}
        {{repo.name}} PR #{{build.pull}} failed in {{since build.started}}. Fix me please {{build.author}}!  Here is the build log: {{build.link}}.  Link to the PR: https://github.com/{{repo.owner}}/{{repo.name}}/pull/{{build.pull}}
      {{/success}}
  error-report:
    image: redwebaps/testbox-chromedriver:2.38
    commands:
    - if [ -z "${CI_PULL_REQUEST}" ]; then export CI_PULL_REQUEST=1; fi
    - cd tests
    - vendor/bin/robo send:build-report-error-slack redcomponent 365447364384436 Q94UM5kjZkZIrau8MIL93m0dN6U "$CI_REPO" "$CI_PULL_REQUEST" "https://hooks.slack.com/services/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" "#redform" "$CI_BUILD_URL"
    when:
      status: [ failure ]
services:
  db:
    image: mysql/mysql-server:5.7
    # pull: true
    environment:
    - MYSQL_ROOT_PASSWORD=root
    - MYSQL_ROOT_HOST=%
  php:
    image: redwebaps/php-apache:7.0
    # pull: true
    environment:
    - WEB_DOCUMENT_ROOT=/drone/src/github.com/${DRONE_REPO}
    - JOOMLA_INSTALLATION_DISABLE_LOCALHOST_CHECK=1
branches:
  exclude: [ crowdin ]